# This is a basic workflow to help you get started with Actions

name: PR_report_send

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      value:
        description: "please enter the recipient email address"
        required: true
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run the script
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GAPP: ${{ secrets.GAPP }}
        run: |

          echo "${{ env.GH_TOKEN }}" > github-token.txt

          gh --version > /dev/null 2>&1

          if [ $? != 0 ];
          then
            echo "kindly install the Github CLI to process further"
            exit 1
          fi

          gh auth status > /dev/null 2>&1

          if [ $? != 0 ];
          then
              if [ -s github-token.txt ]; 
              then
                  gh auth login --with-token < github-token.txt > /dev/null 2>&1
                  if [ $? != 0 ]
                  then
                  echo "kindly login the GitHub CLI with "gh auth login" or add the github token in the github-token.txt file"
                  echo "If github-token.txt doesn't exist then create the file and add the github token in it."
                  # Note: Adding token in the clear text format is not recommended this is for just demonstration only kindly follow the best security practices.
                  exit 1
                  fi
              fi
          fi


          sender=nowhemantsharma@gmail.com
          receiver=${{ inputs.value }}
          # receiver=hemantsharmanow@gmail.com  # read -p "Enter the receiver's email address" receiver
          gapp=${{ env.GAPP }}               #not secure but for demo purpose kept it as clear text. 
          sub="Weekly PR Summary"



          gh pr list -L 7 -R https://github.com/microsoft/Microsoft365DSC -s all --json number,title,headRefName,state,isDraft,closed,updatedAt --template '{{tablerow "NUMBER" "TITLE" "headRefName" "STATE" "DRAFT" "CLOSED" "DATE"}}{{range .}}{{tablerow (printf "#%v" .number | autocolor "green") .title .headRefName .state .isDraft .closed (timeago .updatedAt)}}{{end}}' > weekly_pr.txt


          body="Kindly check the attachment for the weekly PR summary"

          file="weekly_pr.txt"
    
              MIMEType=`file --mime-type "$file" | sed 's/.*: //'`
              curl -s --url 'smtps://smtp.gmail.com:465' --ssl-reqd \
              --mail-from $sender \
              --mail-rcpt $receiver\
              --user $sender:$gapp \
               -H "Subject: $sub" -H "From: $sender" -H "To: $receiver" -F \
              '=(;type=multipart/mixed' -F "=$body;type=text/plain" -F \
                "file=@$file;type=$MIMEType;encoder=base64" -F '=)'

